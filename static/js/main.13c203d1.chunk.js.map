{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","leftPosition","disabledPrevButton","disabledNextButton","handlerNextButton","value","props","images","itemWidth","frameSize","infinite","maxLeftPosition","length","setState","prevState","handlerPrevButton","this","step","animationDuration","className","type","disabled","onClick","style","width","left","transition","map","image","index","src","alt","String","React","Component","App","setItemWidth","setFrameSize","setStep","setAimationDuration","changeCheckbox","action","method","htmlFor","id","name","defaultValue","min","max","onChange","target","defaultChecked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13c203d1.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport { ValuesType } from '../Types/ValuesType';\n\ntype State = {\n  leftPosition: number,\n  disabledPrevButton?: boolean,\n  disabledNextButton?: boolean,\n};\n\nclass Carousel extends React.Component<ValuesType, State> {\n  state: Readonly<State> = {\n    leftPosition: 0,\n    disabledPrevButton: true,\n    disabledNextButton: false,\n  };\n\n  handlerNextButton = (value: number) => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const maxLeftPosition = -((itemWidth * images.length)\n    - (itemWidth * frameSize));\n\n    this.setState({ disabledPrevButton: false });\n\n    this.setState((prevState) => {\n      if (infinite && prevState.leftPosition === maxLeftPosition) {\n        return { leftPosition: 0 };\n      }\n\n      if (infinite && prevState.leftPosition - value <= maxLeftPosition) {\n        return { leftPosition: maxLeftPosition, disabledNextButton: false };\n      }\n\n      if (prevState.leftPosition - value <= maxLeftPosition) {\n        return { leftPosition: maxLeftPosition, disabledNextButton: true };\n      }\n\n      return { leftPosition: prevState.leftPosition - value };\n    });\n  };\n\n  handlerPrevButton = (value: number) => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    this.setState({ disabledNextButton: false });\n\n    if (!infinite && this.state.leftPosition === 0) {\n      this.setState({ disabledPrevButton: true });\n    }\n\n    const maxLeftPosition = -((itemWidth * images.length)\n    - (itemWidth * frameSize));\n\n    this.setState((prevState) => {\n      if (infinite && prevState.leftPosition === 0) {\n        return { leftPosition: maxLeftPosition };\n      }\n\n      if (!infinite && prevState.leftPosition + value >= 0) {\n        return { leftPosition: 0, disabledPrevButton: true };\n      }\n\n      if (prevState.leftPosition + value >= 0) {\n        return { leftPosition: 0 };\n      }\n\n      return { leftPosition: prevState.leftPosition + value };\n    });\n  };\n\n  render(): React.ReactNode {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { leftPosition, disabledPrevButton, disabledNextButton } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          disabled={disabledPrevButton}\n          onClick={() => {\n            this.handlerPrevButton(itemWidth * step);\n          }}\n        >\n          &#60;\n        </button>\n\n        <div\n          className=\"Carousel__list-container\"\n          style={{ width: `${itemWidth * frameSize}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * images.length}px`,\n              left: leftPosition === 0 ? 0 : (`${leftPosition}px`),\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n              >\n                <img\n                  src={image}\n                  alt={String(index)}\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-cy=\"next\"\n          disabled={disabledNextButton}\n          onClick={() => {\n            this.handlerNextButton(itemWidth * step);\n          }}\n        >\n          &#62;\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { ValuesType } from './Types/ValuesType';\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component<{}, ValuesType> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setItemWidth = (value: number) => {\n    this.setState({ itemWidth: value });\n  };\n\n  setFrameSize = (value: number) => {\n    this.setState({ frameSize: value });\n  };\n\n  setStep = (value: number) => {\n    this.setState({ step: value });\n  };\n\n  setAimationDuration = (value: number) => {\n    this.setState({ animationDuration: value });\n  };\n\n  changeCheckbox = () => {\n    this.setState((prevState) => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          action=\"#\"\n          method=\"get\"\n          className=\"Form\"\n        >\n          <h3>Choose own carousel size</h3>\n\n          <label htmlFor=\"ItemWidth\">\n            Item Width:&nbsp;\n            <input\n              type=\"number\"\n              id=\"ItemWidth\"\n              name=\"ItemWidth\"\n              defaultValue={itemWidth}\n              min=\"130\"\n              max=\"500\"\n              onChange={({ target }) => {\n                this.setItemWidth(+target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"FrameSize\">\n            Frame Size:&nbsp;\n            <input\n              type=\"number\"\n              id=\"FrameSize\"\n              name=\"FrameSize\"\n              defaultValue={frameSize}\n              min=\"1\"\n              max=\"10\"\n              onChange={({ target }) => {\n                this.setFrameSize(+target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"Step\">\n            Step:&nbsp;\n            <input\n              type=\"number\"\n              id=\"Step\"\n              name=\"Step\"\n              defaultValue={step}\n              min=\"1\"\n              max=\"10\"\n              onChange={({ target }) => {\n                this.setStep(+target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"AnimationDuration\">\n            Animation Duration:&nbsp;\n            <input\n              type=\"number\"\n              id=\"AnimationDuration\"\n              name=\"AnimationDuration\"\n              defaultValue={animationDuration}\n              min=\"500\"\n              max=\"10000\"\n              onChange={({ target }) => {\n                this.setAimationDuration(+target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite&nbsp;\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              name=\"infinite\"\n              defaultChecked={infinite}\n              onClick={this.changeCheckbox}\n            />\n          </label>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}